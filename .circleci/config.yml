version: 2.1

orbs:
  # https://circleci.com/developer/orbs/orb/daniel-shuy/renovate
  renovate: daniel-shuy/renovate@3.1.0

references:
  test_docker_image: &test_docker_image "cimg/openjdk:11.0.13"

commands:
  install_pdf_tools:
    steps:
      - run: |
          sudo apt-get update
          # contains pdfunite
          sudo apt-get install poppler-utils
          # contains texi2pdf
          sudo apt-get install texinfo
          sudo apt-get install texlive-full

  install_pdf_tools_without_packages:
    steps:
      - run: |
          sudo apt-get update
          # contains pdfunite
          sudo apt-get install poppler-utils
          # contains texi2pdf
          sudo apt-get install texinfo
          sudo apt-get install texlive

  install_needed_font_package:
    steps:
      - run: |
          sudo apt-get update
          # contains the pango font. Without it, there is this error: 
          # "java.util.concurrent.ExecutionException: java.lang.UnsatisfiedLinkError: no javafx_font_pango in java.library.path"
          sudo apt-get install libpangoft2-1.0-0
jobs:
  run_tests_java:
    docker:
      - image: *test_docker_image
    steps:
      - checkout
      - install_pdf_tools
      - run: |
          ./gradlew :test -i
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/test-results

  run_tests_tools_not_installed_java:
    docker:
      - image: *test_docker_image
    steps:
      - checkout
      - run: |
          ./gradlew clean :testToolsNotInstalled -i
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/test-results

  run_tests_tex_packages_not_installed_java:
    docker:
      - image: *test_docker_image
    steps:
      - checkout
      - install_pdf_tools_without_packages
      - run: |
          ./gradlew clean :testTexPackagesNotInstalled -i
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/test-results

  run_integration_tests_java:
    docker:
      - image: *test_docker_image
    steps:
      - checkout
      - install_pdf_tools
      - install_needed_font_package
      - run: |
          # Actually a CircleCI env variable, but it's hard to get it into the gradle-triggered tests.
          # So this is a workaround.
          export JAVA_TOOL_OPTIONS="-DCI=true"
          ./gradlew :integrationTest -i
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/test-results

  run_integration_tests_tools_not_installed_java:
    docker:
      - image: *test_docker_image
    steps:
      - checkout
      - install_needed_font_package
      - run: |
          # Actually a CircleCI env variable, but it's hard to get it into the gradle-triggered tests.
          # So this is a workaround.
          export JAVA_TOOL_OPTIONS="-DCI=true"
          ./gradlew clean :integrationTestToolsNotInstalled -i
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/test-results

workflows:
  version: 2
  run_tests:
    jobs:
      - renovate/validate-config
      - run_tests_java
      - run_tests_tools_not_installed_java
      - run_tests_tex_packages_not_installed_java
      - run_integration_tests_java
      - run_integration_tests_tools_not_installed_java
